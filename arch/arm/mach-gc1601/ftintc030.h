#ifndef __FTINTC030_H
#define __FTINTC030_H

enum irq_type {
	IRQ_TYPE_EDGE_RISING = 0,
	IRQ_TYPE_EDGE_FALLING,
	IRQ_TYPE_LEVEL_HIGH,
	IRQ_TYPE_LEVEL_LOW
};

#define FTINTC030_OFFSET_SPI_SOURCE	0x000
#define FTINTC030_OFFSET_SPI_EN		0x004
#define FTINTC030_OFFSET_SPI_CLEAR	0x008
#define FTINTC030_OFFSET_SPI_MODE	0x00c
#define FTINTC030_OFFSET_SPI_LEVEL	0x010
#define FTINTC030_OFFSET_SPI_PENDING	0x014

#define FTINTC030_OFFSET_SPI_PRIOR	0x240
#define FTINTC030_OFFSET_SPI_TARGET	0x420

#define FTINTC030_OFFSET_PPI_SGI_EN	0x644
#define FTINTC030_OFFSET_PPI_CLEAR	0x648
#define FTINTC030_OFFSET_PPI_SGI_MODE	0x64c
#define FTINTC030_OFFSET_PPI_SGI_LEVEL	0x650
#define FTINTC030_OFFSET_SGI_CTRL	0x680
#define FTINTC030_OFFSET_PRIMASK	0x684
#define FTINTC030_OFFSET_BINPOINT	0x688
#define FTINTC030_OFFSET_ACK		0x68c
#define FTINTC030_OFFSET_EOI		0x690
#define FTINTC030_OFFSET_INTCR		0x69c

#define FTINTC030_OFFSET_CPU_MATCH(cpu)	(0x6a0 + (cpu) * 4)
#define FTINTC030_OFFSET_CPU_MATCH_MASK(cpu)	(0x6d0 + (cpu) * 4)

#define FTINTC030_OFFSET_FEAT1		0x700
#define FTINTC030_OFFSET_FEAT2		0x704
#define FTINTC030_OFFSET_REV		0x700

#define FTINTC030_FEAT1_CPUNUM(x)	(((x) >> 16) & 0xf)
#define FTINTC030_FEAT1_SGINUM(x)	(((x) >> 11) & 0x1f)
#define FTINTC030_FEAT1_SPINUM(x)	(((x) >> 2) & 0x1ff)

//For HW FTINTC030_SPI_TARGET_INVERSE define
#if defined(CONFIG_ARCH_A380)
#define FTINTC030_SPI_TARGET_INVERSE
#else
#undef FTINTC030_SPI_TARGET_INVERSE
#endif

void ftintc030_raise_softirq(unsigned int cpu, unsigned int irq);
void ftintc030_irq_set_type(unsigned int irq, unsigned int type);

#endif